// Generated by CoffeeScript 1.9.3
(function() {
  var Animal, Dog, dog,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Animal = (function() {
    function Animal(name) {
      this.name = name;
    }

    Animal.prototype.say = function(word) {
      return console.log(this.name + " said: " + word);
    };

    return Animal;

  })();

  Dog = (function(superClass) {
    extend(Dog, superClass);

    function Dog(name) {
      Dog.__super__.constructor.call(this, name);
    }

    Dog.prototype.say = function(word) {
      return Dog.__super__.say.call(this, "Bowwow, " + word);
    };

    return Dog;

  })(Animal);

  dog = new Dog("Bob");

  dog.say("Hello!");

}).call(this);
